// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: post-effect-vs:vert
      frag: fs:frag
      properties:
        brightness: { value: 1.0 }
        saturation: { value: 1.0 }
        contrast: { value: 1.0 }
}%

CCProgram post-effect-vs %{
precision highp float;
#include <common>
#include <cc-global>

in vec2 a_position;
in vec2 a_texCoord;
out vec2 v_uv;

vec4 vert () {
  vec4 pos = vec4(a_position, 0, 1);
  v_uv = a_texCoord * cc_screenScale.xy;

  return pos;
}
}%

CCProgram cc-post-effect %{
// #pragma builtin(local)
// uniform CCPostEffect {
//   vec2 cc_pe_resolution;
// };

// #pragma builtin(local)
uniform sampler2D pe_origin_texture;
// #pragma builtin(local)
uniform sampler2D pe_input_texture;
}%

CCProgram fs %{
  precision highp float;
  #include <cc-post-effect>
  in vec2 v_uv;

  uniform Vignette {
    float brightness;
    float saturation;
    float contrast;
  };

  float vignette(vec2 uv, float a, float b) {
    float len = length(uv - 0.5);
    return smoothstep(a, b, len);
  }

  vec4 frag () {
    vec4 color = texture(pe_input_texture, v_uv);
    
    // brightness
    color.rgb *= brightness;

    // saturation
    vec3 luminance = vec3(dot(color.rgb, vec3(0.2126729, 0.7151522, 0.0721750)));
    color.rgb = mix(luminance, color.rgb, saturation);

    // contrast
    vec3 grayColor = vec3(0.5, 0.5, 0.5);
    color.rgb = mix(grayColor, color.rgb, contrast);
    
    return color;
  }
}%